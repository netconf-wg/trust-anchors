<?xml version='1.0'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc linkmailto="no" ?>
<?rfc editing="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc-ext allow-markup-in-artwork="yes" ?>
<?rfc-ext include-index="no" ?>
<!--<?rfc strict="no"?> -->

<rfc category="std"
     ipr="trust200902"
     docName="draft-ietf-netconf-trust-anchors-latest" >
    <front>
      <title>A YANG Data Model for a Truststore</title>
      <author initials="K." surname="Watsen" fullname="Kent Watsen">
        <organization>Watsen Networks</organization>
        <address>
          <email>kent+ietf@watsen.net</email>
        </address>
      </author>
      <date/>
      <area>Operations</area>
      <workgroup>NETCONF Working Group</workgroup>
      <abstract>
        <t>This document defines a YANG 1.1 data model for configuring
          globally-accessible bags of certificates and public keys that can be referenced
          by other data models for trust.</t>
      </abstract>
      <note title="Editorial Note (To be removed by RFC Editor)">
        <t>This draft contains placeholder values that need to be replaced
          with finalized values at the time of publication.  This note summarizes
          all of the substitutions that are needed.  No other RFC Editor 
          instructions are specified elsewhere in this document.</t>
        <t>Artwork in this document contains shorthand references to drafts in
          progress.  Please apply the following replacements:
          <list style="symbols">
            <t><spanx style="verb">AAAA</spanx> --&gt; the assigned RFC value for draft-ietf-netconf-crypto-types</t>
            <t><spanx style="verb">BBBB</spanx> --&gt; the assigned RFC value for this draft</t>
          </list>
        </t>
        <t>Artwork in this document contains placeholder values for the date
          of publication of this draft.  Please apply the following replacement:
          <list  style="symbols">
            <t><spanx style="verb">YYYY-MM-DD</spanx> --&gt; the publication date of this draft</t>
          </list>
        </t>
        <t>The following Appendix section is to be removed prior to publication:
          <list  style="symbols">
            <t>Appendix A.  Change Log</t>
          </list>
        </t>
      </note>
INSERT_TEXT_FROM_FILE(../client-server-overview-snippet.xml,158)
    </front>
    <middle>
      <section title="Introduction">

        <t>This document defines a YANG 1.1 <xref target="RFC7950"/> data model for configuring
          globally-accessible bags of certificates and public keys that can be referenced by
          other data models for trust.</t>

        <t>This document in compliant with Network Management Datastore Architecture
          (NMDA) <xref target="RFC8342"/>.  For instance, trust anchors installed
          during manufacturing (e.g., for trusted well-known services), are expected
          to appear in &lt;operational&gt; (see <xref target="built-ins"/>).</t>

        <section title="Requirements Language" anchor="requirements-language">
          <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
          NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
          "MAY", and "OPTIONAL" in this document are to be interpreted as
          described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
          when, and only when, they appear in all capitals, as shown here.</t>
        </section>

        <section title="Tree Diagram Notation">
          <t>Tree diagrams used in this document follow the notation
          defined in <xref target="RFC8340"/>.</t>
        </section>

      </section>

      <section title="The Trust Anchors Model">
  
        <section title="Tree Diagram">
          <t>The following tree diagram provides an overview of the
          "ietf-truststore" module.</t>
          <t>
            <figure>
              <artwork><![CDATA[
  INSERT_TEXT_FROM_FILE(refs/ietf-truststore-tree.txt)
  ]]></artwork>
            </figure>
          </t>
        </section>
  
        <section title="Example Usage" anchor="examples">
          <t>The following example illustrates trust anchors in &lt;intended&gt;.
            Please see <xref target="built-ins"/> for an example illustrating
            built-in values in &lt;operational&gt;.</t>
          <t>
            <figure>
              <artwork><![CDATA[
  INSERT_TEXT_FROM_FILE(refs/ex-truststore.xml)
  ]]></artwork>
            </figure>
          </t>
  
          <t>The following example illustrates the "certificate-expiration"
          notification in use with the NETCONF protocol.</t>
          <t>
            <figure>
              <artwork><![CDATA[
  INSERT_TEXT_FROM_FILE(refs/ex-notification-ce.xml)
  ]]></artwork>
            </figure>
          </t>
  
        </section>
  
        <section title="YANG Module" anchor="yang-module">
          <t>This YANG module imports modules from <xref target="RFC8341"/>
          and <xref target="I-D.ietf-netconf-crypto-types"/>.</t>
          <t>
            <figure>
              <preamble>&lt;CODE BEGINS&gt; file "ietf-truststore@YYYY-MM-DD.yang"</preamble>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-truststore@YYYY-MM-DD.yang)
]]></artwork>
              <postamble>&lt;CODE ENDS&gt;</postamble>
            </figure>
          </t>
        </section>
      </section>

      <section title="Support for Built-in Trust Anchors" anchor="built-ins">
        <t>In some implementations, a server may define some built-in trust anchors.
          For instance, there may be built-in trust anchors enabling the server to
          securely connect to well-known services (e.g., an SZTP <xref target="RFC8572"/>
          bootstrap server) or public CA certificates to connect to arbitrary services
          using public PKI.</t>
        <t>Built-in trust anchors are expected to be set by a vendor-specific process.
          Any ability for operators to modify built-in trust anchors is outside the
          scope of this document.</t>
        <t>As built-in trust anchors are provided by the system, they are present in 
          &lt;operational&gt;. The example below illustrates what the Truststore in
          &lt;operational&gt; might look like for a server in its factory default
          state.</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-truststore-default-operational.xml)
]]></artwork>
          </figure>
        </t>
        <t>In order for the built-in trust anchors to be referenced by configuration,
          the referenced nodes MUST first be copied into &lt;running&gt;.  They SHOULD
          be copied into &lt;running&gt; using the same "key" values, so that the
          system can bind the references to the built-in entries.  Only the referenced
          nodes need to be copied.  When using the same key values as in &lt;operational&gt;
          no new values can be added and no existing values can be changed; that which
          is in &lt;running&gt; can only be a subset of that which is in &lt;operational&gt;.</t>  
        <t>For instance, the following example illustrates how a single built-in public
          CA certificate from the previous example has been propagated to &lt;running&gt;:</t>
        <t>
          <figure>
            <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-truststore-default-running.xml)
]]></artwork>
          </figure>
        </t>
      </section>

      <section title="Security Considerations">

        <t>The YANG module defined in this document is designed to be accessed via YANG
        based management protocols, such as NETCONF <xref target="RFC6241"/> and
        RESTCONF <xref target="RFC8040"/>.  Both of these protocols have mandatory-to-implement
        secure transport layers (e.g., SSH, TLS) with mutual authentication.</t>
 
        <t>The NETCONF access control model (NACM) <xref target="RFC8341"/> provides the means
        to restrict access for particular users to a pre-configured subset of all available
        protocol operations and content.</t>
 
        <t>There are a number of data nodes defined in this YANG module that are 
        writable/creatable/deletable (i.e., config true, which is the default). These data
        nodes may be considered sensitive or vulnerable in some network environments. Write
        operations (e.g., edit-config) to these data nodes without proper protection can
        have a negative effect on network operations. These are the subtrees and data nodes
        and their sensitivity/vulnerability:
          <list style="hanging" hangIndent="6">
            <t hangText="   /:">The entire data tree defined by this module is sensitive to
              write operations.  For instance, the addition or removal of any trust anchor
              may dramatically alter the implemented security policy.  For this reason, the
              NACM extension "default-deny-write" has been set for the entire data tree.</t>
          </list>
        </t>
 
        <t>None of the readable data nodes in this YANG module are considered sensitive
        or vulnerable in network environments.</t>
 
        <t>This module does not define any RPCs, actions, or notifications, and thus the
        security consideration for such is not provided here.</t>
      </section>

      <section title="IANA Considerations">
        <section title="The IETF XML Registry">
          <t>This document registers one URI in the "ns" subregistry of
          the IETF XML Registry <xref target="RFC3688"/>.  Following the
          format in <xref target="RFC3688"/>, the following registration
          is requested:</t>
          <t>
            <figure>
                <artwork><![CDATA[
   URI: urn:ietf:params:xml:ns:yang:ietf-truststore
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.
]]></artwork>
            </figure>
          </t>
        </section>
        <section title="The YANG Module Names Registry">
          <t>This document registers one YANG module in the
          YANG Module Names registry <xref target="RFC6020"/>.
          Following the format in <xref target="RFC6020"/>, the
          the following registration is requested:</t>
          <t>
            <figure>
                <artwork><![CDATA[
   name:         ietf-truststore
   namespace:    urn:ietf:params:xml:ns:yang:ietf-truststore
   prefix:       ta
   reference:    RFC BBBB

]]></artwork>
            </figure>
          </t>
        </section>
      </section>


    </middle>

    <back>
      <references title="Normative References">
        <?rfc include="reference.RFC.2119.xml"?>
        <?rfc include="reference.RFC.7950.xml"?>
        <?rfc include="reference.RFC.8174.xml"?>
        <?rfc include="reference.RFC.8341.xml"?>
        <?rfc include="reference.I-D.ietf-netconf-crypto-types"?>
      </references>
      <references title="Informative References">
        <?rfc include="reference.RFC.3688.xml"?>
        <?rfc include="reference.RFC.6020.xml"?>
        <?rfc include="reference.RFC.6241.xml"?>
        <?rfc include="reference.RFC.8040.xml"?>
        <?rfc include="reference.RFC.8340.xml"?>
        <?rfc include="reference.RFC.8342.xml"?>
        <?rfc include="reference.RFC.8572.xml"?>
      </references>

      <section title="Change Log">
        <section title="00 to 01">
          <t>
            <list style="symbols">
              <t>Added features "x509-certificates" and "ssh-host-keys".</t>
              <t>Added nacm:default-deny-write to "trust-anchors" container.</t>
            </list>
          </t>
        </section>
        <section title="01 to 02">
          <t>
            <list style="symbols">
              <t>Switched "list pinned-certificate" to use the 
                 "trust-anchor-cert-grouping" from crypto-types.
                 Effectively the same definition as before.</t>
            </list>
          </t>
        </section>
        <section title="02 to 03">
          <t>
            <list style="symbols">
              <t>Updated copyright date, boilerplate template, affiliation,
                folding algorithm, and reformatted the YANG module.</t>
            </list>
          </t>
        </section>
        <section title="03 to 04">
          <t>
            <list style="symbols">
              <t>Added groupings 'local-or-truststore-certs-grouping'
                and 'local-or-truststore-host-keys-grouping', matching
                similar definitions in the keystore draft.  Note new
                (and incomplete) "truststore" usage!</t>
              <t>Related to above, also added features 'truststore-supported'
                and 'local-trust-anchors-supported'.</t>
            </list>
          </t>
        </section>
        <section title="04 to 05">
          <t>
            <list style="symbols">
              <t>Renamed "trust-anchors" to "truststore"</t>
              <t>Removed "pinned." prefix everywhere, to match truststore rename</t>
              <t>Moved everything under a top-level 'grouping' to enable use in other contexts.</t>
              <t>Renamed feature from 'local-trust-anchors-supported' to 'local-definitions-supported' (same name used in keystore)</t>
              <t>Removed the "require-instance false" statement from the "*-ref" typedefs.</t>
              <t>Added missing "ssh-host-keys" and "x509-certificates" if-feature statements</t>
            </list>
          </t>
        </section>
        <section title="05 to 06">
          <t>
            <list style="symbols">
              <t>Editorial changes only.</t>
            </list>
          </t>
        </section>
        <section title="06 to 07">
          <t>
            <list style="symbols">
              <t>Added Henk Birkholz as a co-author (thanks Henk!)</t>
              <t>Added PSKs and raw public keys to Truststore.</t>
            </list>
          </t>
        </section>
        <section title="07 to 08">
          <t>
            <list style="symbols">
              <t>Added new "Support for Built-in Trust Anchors" section.</t>
              <t>Removed spurious "uses ct:trust-anchor-certs-grouping" line.</t>
              <t>Removed PSK from model.</t>
            </list>
          </t>
        </section>
        <section title="08 to 09">
          <t>
            <list style="symbols">
              <t>Removed remaining PSK references from text.</t>
              <t>Wrapped each top-level list with a container.</t>
              <t>Introduced "bag" term.</t>
              <t>Merged "SSH Public Keys" and "Raw Public Keys" in a single "Public Keys" bag.
                Consuming downstream modules (i.e., "ietf-[ssh/tls]-[client/server]) refine
                the "public-key-format" to be either SSH or TLS specific as needed.</t>
            </list>
          </t>
        </section>
        <section title="09 to 10">
          <t>
            <list style="symbols">
              <t>Removed "algorithm" node from examples.</t>
              <t>Removed the no longer used statements supporting the old "ssh-public-key" and "raw-public-key" nodes.</t>
              <t>Added a "Note to Reviewers" note to first page.</t>
            </list>
          </t>
        </section>
      </section>

      <section title="Acknowledgements" numbered="no">
        <t>The authors especially thank Henk Birkholz for contributing YANG 
          to the ietf-truststore module supporting raw public keys and PSKs
          (pre-shared or pairwise-symmetric keys).  While these contributions
          were eventually replaced by reusing the existing support for
          asymmetric and symmetric trust anchors, respectively, it was only
          thru Henk's initiative that the WG was able to come to that result.</t>

        <t>The authors additionally thank the following for helping give shape
          to this work (ordered by last name):
          Martin Bjorklund,
          Nick Hancock,
          Balázs Kovács,
          Eric Voit,
          and Liang Xia.
        </t>
      </section>

    </back>
</rfc>

