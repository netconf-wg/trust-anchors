<truststore
   xmlns="urn:ietf:params:xml:ns:yang:ietf-truststore"
   xmlns:or="urn:ietf:params:xml:ns:yang:ietf-origin">

  <!-- Manufacturer's trusted root CA certs -->
  <certificates or:origin="or:system">
    <name>manufacturers-root-ca-certs</name>
    <description>
      Certificates built into the device for authenticating
      manufacturer-signed objects, such as TLS server certificates,
      vouchers, etc.  Note, though listed here, these are not
      configurable; any attempt to do so will be denied.
    </description>
    <certificate>
      <name>Manufacturer Root CA cert 1</name>
      <cert>base64encodedvalue==</cert>
    </certificate>
    <certificate>
      <name>Manufacturer Root CA cert 2</name>
      <cert>base64encodedvalue==</cert>
    </certificate>
  </certificates>

  <!-- specific end-entity certs for authenticating servers -->
  <certificates or:origin="or:intended">
    <name>explicitly-trusted-server-certs</name>
    <description>
      Specific server authentication certificates for explicitly
      trusted servers.  These are needed for server certificates
      that are not signed by a CA.
    </description>
    <certificate>
      <name>Fred Flintstone</name>
      <cert>base64encodedvalue==</cert>
    </certificate>
  </certificates>

  <!-- trusted CA certs for authenticating servers -->
  <certificates or:origin="or:intended">
    <name>explicitly-trusted-server-ca-certs</name>
    <description>
      Trust anchors (i.e. CA certs) that are used to authenticate 
      server connections.  Servers are authenticated if their
      certificate has a chain of trust to one of these CA
      certificates.
    </description>
    <certificate>
      <name>ca.example.com</name>
      <cert>base64encodedvalue==</cert>
    </certificate>
  </certificates>

  <!-- specific end-entity certs for authenticating clients -->
  <certificates or:origin="or:intended">
    <name>explicitly-trusted-client-certs</name>
    <description>
      Specific client authentication certificates for explicitly
      trusted clients.  These are needed for client certificates
      that are not signed by a CA.
    </description>
    <certificate>
      <name>George Jetson</name>
      <cert>base64encodedvalue==</cert>
    </certificate>
  </certificates>

  <!-- trusted CA certs for authenticating clients -->
  <certificates or:origin="or:intended">
    <name>explicitly-trusted-client-ca-certs</name>
    <description>
      Trust anchors (i.e. CA certs) that are used to authenticate 
      client connections.  Clients are authenticated if their
      certificate has a chain of trust to one of these CA
      certificates.
    </description>
    <certificate>
      <name>ca.example.com</name>
      <cert>base64encodedvalue==</cert>
    </certificate>
  </certificates>

  <!-- trusted CA certs for random HTTPS servers on Internet -->
  <certificates or:origin="or:system">
    <name>common-ca-certs</name>
    <description>
      Trusted certificates to authenticate common HTTPS servers.
      These certificates are similar to those that might be
      shipped with a web browser.
    </description>
    <certificate>
      <name>ex-certificate-authority</name>
      <cert>base64encodedvalue==</cert>
    </certificate>
  </certificates>

  <!-- specific SSH host keys for authenticating clients -->
  <host-keys or:origin="or:intended">
    <name>explicitly-trusted-ssh-host-keys</name>
    <description>
      Trusted SSH host keys used to authenticate SSH servers.
      These host keys would be analogous to those stored in
      a known_hosts file in OpenSSH.
    </description>
    <host-key>
      <name>corp-fw1</name>
      <host-key>base64encodedvalue==</host-key>
    </host-key>
  </host-keys>

</truststore>
